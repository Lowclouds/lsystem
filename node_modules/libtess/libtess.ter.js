/**
 * @license
 * Copyright 2000, Silicon Graphics, Inc. All Rights Reserved.
 * Copyright 2015, Google Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Original Code. The Original Code is: OpenGL Sample Implementation,
 * Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
 * Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
 * Copyright in any portions created by third parties is as indicated
 * elsewhere herein. All Rights Reserved.
 */
var libtess={DEBUG:!1,assert:function(e,s){if(libtess.DEBUG&&!e)throw new Error("Assertion failed"+(s?": "+s:""))},GLU_TESS_MAX_COORD:1e150,TRUE_PROJECT:!0,GLU_TESS_DEFAULT_TOLERANCE:0,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111,GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901}};libtess.PQHandle,libtess.geom={},libtess.geom.vertEq=function(e,s){return e.s===s.s&&e.t===s.t},libtess.geom.vertLeq=function(e,s){return e.s<s.s||e.s===s.s&&e.t<=s.t},libtess.geom.edgeEval=function(e,s,t){var i=s.s-e.s,l=t.s-s.s;return i+l>0?i<l?s.t-e.t+(e.t-t.t)*(i/(i+l)):s.t-t.t+(t.t-e.t)*(l/(i+l)):0},libtess.geom.edgeSign=function(e,s,t){var i=s.s-e.s,l=t.s-s.s;return i+l>0?(s.t-t.t)*i+(s.t-e.t)*l:0},libtess.geom.transLeq=function(e,s){return e.t<s.t||e.t===s.t&&e.s<=s.s},libtess.geom.transEval=function(e,s,t){var i=s.t-e.t,l=t.t-s.t;return i+l>0?i<l?s.s-e.s+(e.s-t.s)*(i/(i+l)):s.s-t.s+(t.s-e.s)*(l/(i+l)):0},libtess.geom.transSign=function(e,s,t){var i=s.t-e.t,l=t.t-s.t;return i+l>0?(s.s-t.s)*i+(s.s-e.s)*l:0},libtess.geom.edgeGoesLeft=function(e){return libtess.geom.vertLeq(e.dst(),e.org)},libtess.geom.edgeGoesRight=function(e){return libtess.geom.vertLeq(e.org,e.dst())},libtess.geom.vertL1dist=function(e,s){return Math.abs(e.s-s.s)+Math.abs(e.t-s.t)},libtess.geom.vertCCW=function(e,s,t){return e.s*(s.t-t.t)+s.s*(t.t-e.t)+t.s*(e.t-s.t)>=0},libtess.geom.interpolate_=function(e,s,t,i){return(e=e<0?0:e)<=(t=t<0?0:t)?0===t?(s+i)/2:s+e/(e+t)*(i-s):i+t/(e+t)*(s-i)},libtess.geom.edgeIntersect=function(e,s,t,i,l){var r,n,o;libtess.geom.vertLeq(e,s)||(o=e,e=s,s=o),libtess.geom.vertLeq(t,i)||(o=t,t=i,i=o),libtess.geom.vertLeq(e,t)||(o=e,e=t,t=o,o=s,s=i,i=o),libtess.geom.vertLeq(t,s)?libtess.geom.vertLeq(s,i)?((r=libtess.geom.edgeEval(e,t,s))+(n=libtess.geom.edgeEval(t,s,i))<0&&(r=-r,n=-n),l.s=libtess.geom.interpolate_(r,t.s,n,s.s)):((r=libtess.geom.edgeSign(e,t,s))+(n=-libtess.geom.edgeSign(e,i,s))<0&&(r=-r,n=-n),l.s=libtess.geom.interpolate_(r,t.s,n,i.s)):l.s=(t.s+s.s)/2,libtess.geom.transLeq(e,s)||(o=e,e=s,s=o),libtess.geom.transLeq(t,i)||(o=t,t=i,i=o),libtess.geom.transLeq(e,t)||(o=e,e=t,t=o,o=s,s=i,i=o),libtess.geom.transLeq(t,s)?libtess.geom.transLeq(s,i)?((r=libtess.geom.transEval(e,t,s))+(n=libtess.geom.transEval(t,s,i))<0&&(r=-r,n=-n),l.t=libtess.geom.interpolate_(r,t.t,n,s.t)):((r=libtess.geom.transSign(e,t,s))+(n=-libtess.geom.transSign(e,i,s))<0&&(r=-r,n=-n),l.t=libtess.geom.interpolate_(r,t.t,n,i.t)):l.t=(t.t+s.t)/2},libtess.mesh={},libtess.mesh.makeEdge=function(e){var s=libtess.mesh.makeEdgePair_(e.eHead);return libtess.mesh.makeVertex_(s,e.vHead),libtess.mesh.makeVertex_(s.sym,e.vHead),libtess.mesh.makeFace_(s,e.fHead),s},libtess.mesh.meshSplice=function(e,s){var t=!1,i=!1;e!==s&&(s.org!==e.org&&(i=!0,libtess.mesh.killVertex_(s.org,e.org)),s.lFace!==e.lFace&&(t=!0,libtess.mesh.killFace_(s.lFace,e.lFace)),libtess.mesh.splice_(s,e),i||(libtess.mesh.makeVertex_(s,e.org),e.org.anEdge=e),t||(libtess.mesh.makeFace_(s,e.lFace),e.lFace.anEdge=e))},libtess.mesh.deleteEdge=function(e){var s=e.sym,t=!1;e.lFace!==e.rFace()&&(t=!0,libtess.mesh.killFace_(e.lFace,e.rFace())),e.oNext===e?libtess.mesh.killVertex_(e.org,null):(e.rFace().anEdge=e.oPrev(),e.org.anEdge=e.oNext,libtess.mesh.splice_(e,e.oPrev()),t||libtess.mesh.makeFace_(e,e.lFace)),s.oNext===s?(libtess.mesh.killVertex_(s.org,null),libtess.mesh.killFace_(s.lFace,null)):(e.lFace.anEdge=s.oPrev(),s.org.anEdge=s.oNext,libtess.mesh.splice_(s,s.oPrev())),libtess.mesh.killEdge_(e)},libtess.mesh.addEdgeVertex=function(e){var s=libtess.mesh.makeEdgePair_(e),t=s.sym;return libtess.mesh.splice_(s,e.lNext),s.org=e.dst(),libtess.mesh.makeVertex_(t,s.org),s.lFace=t.lFace=e.lFace,s},libtess.mesh.splitEdge=function(e){var s=libtess.mesh.addEdgeVertex(e).sym;return libtess.mesh.splice_(e.sym,e.sym.oPrev()),libtess.mesh.splice_(e.sym,s),e.sym.org=s.org,s.dst().anEdge=s.sym,s.sym.lFace=e.rFace(),s.winding=e.winding,s.sym.winding=e.sym.winding,s},libtess.mesh.connect=function(e,s){var t=!1,i=libtess.mesh.makeEdgePair_(e),l=i.sym;return s.lFace!==e.lFace&&(t=!0,libtess.mesh.killFace_(s.lFace,e.lFace)),libtess.mesh.splice_(i,e.lNext),libtess.mesh.splice_(l,s),i.org=e.dst(),l.org=s.org,i.lFace=l.lFace=e.lFace,e.lFace.anEdge=l,t||libtess.mesh.makeFace_(i,e.lFace),i},libtess.mesh.zapFace=function(e){var s,t=e.anEdge,i=t.lNext;do{if(i=(s=i).lNext,s.lFace=null,null===s.rFace()){s.oNext===s?libtess.mesh.killVertex_(s.org,null):(s.org.anEdge=s.oNext,libtess.mesh.splice_(s,s.oPrev()));var l=s.sym;l.oNext===l?libtess.mesh.killVertex_(l.org,null):(l.org.anEdge=l.oNext,libtess.mesh.splice_(l,l.oPrev())),libtess.mesh.killEdge_(s)}}while(s!==t);var r=e.prev,n=e.next;n.prev=r,r.next=n},libtess.mesh.meshUnion=function(e,s){var t=e.fHead,i=e.vHead,l=e.eHead,r=s.fHead,n=s.vHead,o=s.eHead;return r.next!==r&&(t.prev.next=r.next,r.next.prev=t.prev,r.prev.next=t,t.prev=r.prev),n.next!==n&&(i.prev.next=n.next,n.next.prev=i.prev,n.prev.next=i,i.prev=n.prev),o.next!==o&&(l.sym.next.sym.next=o.next,o.next.sym.next=l.sym.next,o.sym.next.sym.next=l,l.sym.next=o.sym.next),e},libtess.mesh.deleteMesh=function(e){},libtess.mesh.makeEdgePair_=function(e){var s=new libtess.GluHalfEdge,t=new libtess.GluHalfEdge,i=e.sym.next;return t.next=i,i.sym.next=s,s.next=e,e.sym.next=t,s.sym=t,s.oNext=s,s.lNext=t,t.sym=s,t.oNext=t,t.lNext=s,s},libtess.mesh.splice_=function(e,s){var t=e.oNext,i=s.oNext;t.sym.lNext=s,i.sym.lNext=e,e.oNext=i,s.oNext=t},libtess.mesh.makeVertex_=function(e,s){var t=s.prev,i=new libtess.GluVertex(s,t);t.next=i,s.prev=i,i.anEdge=e;var l=e;do{l.org=i,l=l.oNext}while(l!==e)},libtess.mesh.makeFace_=function(e,s){var t=s.prev,i=new libtess.GluFace(s,t);t.next=i,s.prev=i,i.anEdge=e,i.inside=s.inside;var l=e;do{l.lFace=i,l=l.lNext}while(l!==e)},libtess.mesh.killEdge_=function(e){var s=e.next,t=e.sym.next;s.sym.next=t,t.sym.next=s},libtess.mesh.killVertex_=function(e,s){var t=e.anEdge,i=t;do{i.org=s,i=i.oNext}while(i!==t);var l=e.prev,r=e.next;r.prev=l,l.next=r},libtess.mesh.killFace_=function(e,s){var t=e.anEdge,i=t;do{i.lFace=s,i=i.lNext}while(i!==t);var l=e.prev,r=e.next;r.prev=l,l.next=r},libtess.normal={},libtess.normal.S_UNIT_X_=1,libtess.normal.S_UNIT_Y_=0,libtess.normal.projectPolygon=function(e,s,t,i){var l=!1,r=[s,t,i];0===s&&0===t&&0===i&&(libtess.normal.computeNormal_(e,r),l=!0);var n,o=libtess.normal.longAxis_(r),a=e.mesh.vHead;if(libtess.TRUE_PROJECT){libtess.normal.normalize_(r);var _=[0,0,0],g=[0,0,0];_[o]=0,_[(o+1)%3]=libtess.normal.S_UNIT_X_,_[(o+2)%3]=libtess.normal.S_UNIT_Y_;var d=libtess.normal.dot_(_,r);for(_[0]-=d*r[0],_[1]-=d*r[1],_[2]-=d*r[2],libtess.normal.normalize_(_),g[0]=r[1]*_[2]-r[2]*_[1],g[1]=r[2]*_[0]-r[0]*_[2],g[2]=r[0]*_[1]-r[1]*_[0],libtess.normal.normalize_(g),n=a.next;n!==a;n=n.next)n.s=libtess.normal.dot_(n.coords,_),n.t=libtess.normal.dot_(n.coords,g)}else{var b=(o+1)%3,h=(o+2)%3,c=r[o]>0?1:-1;for(n=a.next;n!==a;n=n.next)n.s=n.coords[b],n.t=c*n.coords[h]}l&&libtess.normal.checkOrientation_(e)},libtess.normal.dot_=function(e,s){return e[0]*s[0]+e[1]*s[1]+e[2]*s[2]},libtess.normal.normalize_=function(e){var s=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];s=Math.sqrt(s),e[0]/=s,e[1]/=s,e[2]/=s},libtess.normal.longAxis_=function(e){var s=0;return Math.abs(e[1])>Math.abs(e[0])&&(s=1),Math.abs(e[2])>Math.abs(e[s])&&(s=2),s},libtess.normal.computeNormal_=function(e,s){var t,i=[-2*libtess.GLU_TESS_MAX_COORD,-2*libtess.GLU_TESS_MAX_COORD,-2*libtess.GLU_TESS_MAX_COORD],l=[2*libtess.GLU_TESS_MAX_COORD,2*libtess.GLU_TESS_MAX_COORD,2*libtess.GLU_TESS_MAX_COORD],r=[],n=[],o=e.mesh.vHead;for(t=o.next;t!==o;t=t.next)for(var a=0;a<3;++a){var _=t.coords[a];_<l[a]&&(l[a]=_,n[a]=t),_>i[a]&&(i[a]=_,r[a]=t)}var g=0;if(i[1]-l[1]>i[0]-l[0]&&(g=1),i[2]-l[2]>i[g]-l[g]&&(g=2),l[g]>=i[g])return s[0]=0,s[1]=0,void(s[2]=1);var d=0,b=n[g],h=r[g],c=[0,0,0],p=[b.coords[0]-h.coords[0],b.coords[1]-h.coords[1],b.coords[2]-h.coords[2]],u=[0,0,0];for(t=o.next;t!==o;t=t.next){u[0]=t.coords[0]-h.coords[0],u[1]=t.coords[1]-h.coords[1],u[2]=t.coords[2]-h.coords[2],c[0]=p[1]*u[2]-p[2]*u[1],c[1]=p[2]*u[0]-p[0]*u[2],c[2]=p[0]*u[1]-p[1]*u[0];var m=c[0]*c[0]+c[1]*c[1]+c[2]*c[2];m>d&&(d=m,s[0]=c[0],s[1]=c[1],s[2]=c[2])}d<=0&&(s[0]=s[1]=s[2]=0,s[libtess.normal.longAxis_(p)]=1)},libtess.normal.checkOrientation_=function(e){for(var s=0,t=e.mesh.fHead,i=t.next;i!==t;i=i.next){var l=i.anEdge;if(!(l.winding<=0))do{s+=(l.org.s-l.dst().s)*(l.org.t+l.dst().t),l=l.lNext}while(l!==i.anEdge)}if(s<0)for(var r=e.mesh.vHead,n=r.next;n!==r;n=n.next)n.t=-n.t},libtess.render={},libtess.render.renderMesh=function(e,s,t){for(var i=!1,l=-1,r=s.fHead.prev;r!==s.fHead;r=r.prev)if(r.inside){i||(e.callBeginCallback(libtess.primitiveType.GL_TRIANGLES),i=!0);var n=r.anEdge;do{if(t){var o=n.rFace().inside?0:1;l!==o&&(l=o,e.callEdgeFlagCallback(!!l))}e.callVertexCallback(n.org.data),n=n.lNext}while(n!==r.anEdge)}i&&e.callEndCallback()},libtess.render.renderBoundary=function(e,s){for(var t=s.fHead.next;t!==s.fHead;t=t.next)if(t.inside){e.callBeginCallback(libtess.primitiveType.GL_LINE_LOOP);var i=t.anEdge;do{e.callVertexCallback(i.org.data),i=i.lNext}while(i!==t.anEdge);e.callEndCallback()}},libtess.sweep={},libtess.sweep.SENTINEL_COORD_=4*libtess.GLU_TESS_MAX_COORD,libtess.sweep.TOLERANCE_NONZERO_=!1,libtess.sweep.computeInterior=function(e){var s;for(e.fatalError=!1,libtess.sweep.removeDegenerateEdges_(e),libtess.sweep.initPriorityQ_(e),libtess.sweep.initEdgeDict_(e);null!==(s=e.pq.extractMin());){for(;;){var t=e.pq.minimum();if(null===t||!libtess.geom.vertEq(t,s))break;t=e.pq.extractMin(),libtess.sweep.spliceMergeVertices_(e,s.anEdge,t.anEdge)}libtess.sweep.sweepEvent_(e,s)}var i=e.dict.getMin().getKey();e.event=i.eUp.org,libtess.sweep.doneEdgeDict_(e),libtess.sweep.donePriorityQ_(e),libtess.sweep.removeDegenerateFaces_(e.mesh),e.mesh.checkMesh()},libtess.sweep.addWinding_=function(e,s){e.winding+=s.winding,e.sym.winding+=s.sym.winding},libtess.sweep.edgeLeq_=function(e,s,t){var i=e.event,l=s.eUp,r=t.eUp;return l.dst()===i?r.dst()===i?libtess.geom.vertLeq(l.org,r.org)?libtess.geom.edgeSign(r.dst(),l.org,r.org)<=0:libtess.geom.edgeSign(l.dst(),r.org,l.org)>=0:libtess.geom.edgeSign(r.dst(),i,r.org)<=0:r.dst()===i?libtess.geom.edgeSign(l.dst(),i,l.org)>=0:libtess.geom.edgeEval(l.dst(),i,l.org)>=libtess.geom.edgeEval(r.dst(),i,r.org)},libtess.sweep.deleteRegion_=function(e,s){s.fixUpperEdge,s.eUp.activeRegion=null,e.dict.deleteNode(s.nodeUp),s.nodeUp=null},libtess.sweep.fixUpperEdge_=function(e,s){libtess.mesh.deleteEdge(e.eUp),e.fixUpperEdge=!1,e.eUp=s,s.activeRegion=e},libtess.sweep.topLeftRegion_=function(e){var s=e.eUp.org;do{e=e.regionAbove()}while(e.eUp.org===s);if(e.fixUpperEdge){var t=libtess.mesh.connect(e.regionBelow().eUp.sym,e.eUp.lNext);libtess.sweep.fixUpperEdge_(e,t),e=e.regionAbove()}return e},libtess.sweep.topRightRegion_=function(e){var s=e.eUp.dst();do{e=e.regionAbove()}while(e.eUp.dst()===s);return e},libtess.sweep.addRegionBelow_=function(e,s,t){var i=new libtess.ActiveRegion;return i.eUp=t,i.nodeUp=e.dict.insertBefore(s.nodeUp,i),t.activeRegion=i,i},libtess.sweep.isWindingInside_=function(e,s){switch(e.windingRule){case libtess.windingRule.GLU_TESS_WINDING_ODD:return 0!=(1&s);case libtess.windingRule.GLU_TESS_WINDING_NONZERO:return 0!==s;case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:return s>0;case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:return s<0;case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:return s>=2||s<=-2}return!1},libtess.sweep.computeWinding_=function(e,s){s.windingNumber=s.regionAbove().windingNumber+s.eUp.winding,s.inside=libtess.sweep.isWindingInside_(e,s.windingNumber)},libtess.sweep.finishRegion_=function(e,s){var t=s.eUp,i=t.lFace;i.inside=s.inside,i.anEdge=t,libtess.sweep.deleteRegion_(e,s)},libtess.sweep.finishLeftRegions_=function(e,s,t){for(var i=s,l=s.eUp;i!==t;){i.fixUpperEdge=!1;var r=i.regionBelow(),n=r.eUp;if(n.org!==l.org){if(!r.fixUpperEdge){libtess.sweep.finishRegion_(e,i);break}n=libtess.mesh.connect(l.lPrev(),n.sym),libtess.sweep.fixUpperEdge_(r,n)}l.oNext!==n&&(libtess.mesh.meshSplice(n.oPrev(),n),libtess.mesh.meshSplice(l,n)),libtess.sweep.finishRegion_(e,i),l=r.eUp,i=r}return l},libtess.sweep.addRightEdges_=function(e,s,t,i,l,r){var n=!0,o=t;do{libtess.sweep.addRegionBelow_(e,s,o.sym),o=o.oNext}while(o!==i);null===l&&(l=s.regionBelow().eUp.rPrev());for(var a,_=s,g=l;(o=(a=_.regionBelow()).eUp.sym).org===g.org;)o.oNext!==g&&(libtess.mesh.meshSplice(o.oPrev(),o),libtess.mesh.meshSplice(g.oPrev(),o)),a.windingNumber=_.windingNumber-o.winding,a.inside=libtess.sweep.isWindingInside_(e,a.windingNumber),_.dirty=!0,!n&&libtess.sweep.checkForRightSplice_(e,_)&&(libtess.sweep.addWinding_(o,g),libtess.sweep.deleteRegion_(e,_),libtess.mesh.deleteEdge(g)),n=!1,_=a,g=o;_.dirty=!0,r&&libtess.sweep.walkDirtyRegions_(e,_)},libtess.sweep.callCombine_=function(e,s,t,i,l){var r=[s.coords[0],s.coords[1],s.coords[2]];s.data=null,s.data=e.callCombineCallback(r,t,i),null===s.data&&(l?e.fatalError||(e.callErrorCallback(libtess.errorType.GLU_TESS_NEED_COMBINE_CALLBACK),e.fatalError=!0):s.data=t[0])},libtess.sweep.spliceMergeVertices_=function(e,s,t){var i=[null,null,null,null];i[0]=s.org.data,i[1]=t.org.data,libtess.sweep.callCombine_(e,s.org,i,[.5,.5,0,0],!1),libtess.mesh.meshSplice(s,t)},libtess.sweep.vertexWeights_=function(e,s,t,i,l){var r=libtess.geom.vertL1dist(s,e),n=libtess.geom.vertL1dist(t,e),o=l,a=l+1;i[o]=.5*n/(r+n),i[a]=.5*r/(r+n),e.coords[0]+=i[o]*s.coords[0]+i[a]*t.coords[0],e.coords[1]+=i[o]*s.coords[1]+i[a]*t.coords[1],e.coords[2]+=i[o]*s.coords[2]+i[a]*t.coords[2]},libtess.sweep.getIntersectData_=function(e,s,t,i,l,r){var n=[0,0,0,0],o=[t.data,i.data,l.data,r.data];s.coords[0]=s.coords[1]=s.coords[2]=0,libtess.sweep.vertexWeights_(s,t,i,n,0),libtess.sweep.vertexWeights_(s,l,r,n,2),libtess.sweep.callCombine_(e,s,o,n,!0)},libtess.sweep.checkForRightSplice_=function(e,s){var t=s.regionBelow(),i=s.eUp,l=t.eUp;if(libtess.geom.vertLeq(i.org,l.org)){if(libtess.geom.edgeSign(l.dst(),i.org,l.org)>0)return!1;libtess.geom.vertEq(i.org,l.org)?i.org!==l.org&&(e.pq.remove(i.org.pqHandle),libtess.sweep.spliceMergeVertices_(e,l.oPrev(),i)):(libtess.mesh.splitEdge(l.sym),libtess.mesh.meshSplice(i,l.oPrev()),s.dirty=t.dirty=!0)}else{if(libtess.geom.edgeSign(i.dst(),l.org,i.org)<0)return!1;s.regionAbove().dirty=s.dirty=!0,libtess.mesh.splitEdge(i.sym),libtess.mesh.meshSplice(l.oPrev(),i)}return!0},libtess.sweep.checkForLeftSplice_=function(e,s){var t,i=s.regionBelow(),l=s.eUp,r=i.eUp;if(libtess.geom.vertLeq(l.dst(),r.dst())){if(libtess.geom.edgeSign(l.dst(),r.dst(),l.org)<0)return!1;s.regionAbove().dirty=s.dirty=!0,t=libtess.mesh.splitEdge(l),libtess.mesh.meshSplice(r.sym,t),t.lFace.inside=s.inside}else{if(libtess.geom.edgeSign(r.dst(),l.dst(),r.org)>0)return!1;s.dirty=i.dirty=!0,t=libtess.mesh.splitEdge(r),libtess.mesh.meshSplice(l.lNext,r.sym),t.rFace().inside=s.inside}return!0},libtess.sweep.checkForIntersect_=function(e,s){var t=s.regionBelow(),i=s.eUp,l=t.eUp,r=i.org,n=l.org,o=i.dst(),a=l.dst(),_=new libtess.GluVertex;if(r===n)return!1;if(Math.min(r.t,o.t)>Math.max(n.t,a.t))return!1;if(libtess.geom.vertLeq(r,n)){if(libtess.geom.edgeSign(a,r,n)>0)return!1}else if(libtess.geom.edgeSign(o,n,r)<0)return!1;libtess.geom.edgeIntersect(o,r,a,n,_),libtess.geom.vertLeq(_,e.event)&&(_.s=e.event.s,_.t=e.event.t);var g=libtess.geom.vertLeq(r,n)?r:n;if(libtess.geom.vertLeq(g,_)&&(_.s=g.s,_.t=g.t),libtess.geom.vertEq(_,r)||libtess.geom.vertEq(_,n))return libtess.sweep.checkForRightSplice_(e,s),!1;if(!libtess.geom.vertEq(o,e.event)&&libtess.geom.edgeSign(o,e.event,_)>=0||!libtess.geom.vertEq(a,e.event)&&libtess.geom.edgeSign(a,e.event,_)<=0){if(a===e.event)return libtess.mesh.splitEdge(i.sym),libtess.mesh.meshSplice(l.sym,i),i=(s=libtess.sweep.topLeftRegion_(s)).regionBelow().eUp,libtess.sweep.finishLeftRegions_(e,s.regionBelow(),t),libtess.sweep.addRightEdges_(e,s,i.oPrev(),i,i,!0),!0;if(o===e.event){libtess.mesh.splitEdge(l.sym),libtess.mesh.meshSplice(i.lNext,l.oPrev()),t=s;var d=(s=libtess.sweep.topRightRegion_(s)).regionBelow().eUp.rPrev();return t.eUp=l.oPrev(),l=libtess.sweep.finishLeftRegions_(e,t,null),libtess.sweep.addRightEdges_(e,s,l.oNext,i.rPrev(),d,!0),!0}return libtess.geom.edgeSign(o,e.event,_)>=0&&(s.regionAbove().dirty=s.dirty=!0,libtess.mesh.splitEdge(i.sym),i.org.s=e.event.s,i.org.t=e.event.t),libtess.geom.edgeSign(a,e.event,_)<=0&&(s.dirty=t.dirty=!0,libtess.mesh.splitEdge(l.sym),l.org.s=e.event.s,l.org.t=e.event.t),!1}return libtess.mesh.splitEdge(i.sym),libtess.mesh.splitEdge(l.sym),libtess.mesh.meshSplice(l.oPrev(),i),i.org.s=_.s,i.org.t=_.t,i.org.pqHandle=e.pq.insert(i.org),libtess.sweep.getIntersectData_(e,i.org,r,o,n,a),s.regionAbove().dirty=s.dirty=t.dirty=!0,!1},libtess.sweep.walkDirtyRegions_=function(e,s){for(var t=s.regionBelow();;){for(;t.dirty;)s=t,t=t.regionBelow();if(!s.dirty&&(t=s,null===(s=s.regionAbove())||!s.dirty))return;s.dirty=!1;var i=s.eUp,l=t.eUp;if(i.dst()!==l.dst()&&libtess.sweep.checkForLeftSplice_(e,s)&&(t.fixUpperEdge?(libtess.sweep.deleteRegion_(e,t),libtess.mesh.deleteEdge(l),l=(t=s.regionBelow()).eUp):s.fixUpperEdge&&(libtess.sweep.deleteRegion_(e,s),libtess.mesh.deleteEdge(i),i=(s=t.regionAbove()).eUp)),i.org!==l.org)if(i.dst()===l.dst()||s.fixUpperEdge||t.fixUpperEdge||i.dst()!==e.event&&l.dst()!==e.event)libtess.sweep.checkForRightSplice_(e,s);else if(libtess.sweep.checkForIntersect_(e,s))return;i.org===l.org&&i.dst()===l.dst()&&(libtess.sweep.addWinding_(l,i),libtess.sweep.deleteRegion_(e,s),libtess.mesh.deleteEdge(i),s=t.regionAbove())}},libtess.sweep.connectRightVertex_=function(e,s,t){var i,l=t.oNext,r=s.regionBelow(),n=s.eUp,o=r.eUp,a=!1;(n.dst()!==o.dst()&&libtess.sweep.checkForIntersect_(e,s),libtess.geom.vertEq(n.org,e.event)&&(libtess.mesh.meshSplice(l.oPrev(),n),l=(s=libtess.sweep.topLeftRegion_(s)).regionBelow().eUp,libtess.sweep.finishLeftRegions_(e,s.regionBelow(),r),a=!0),libtess.geom.vertEq(o.org,e.event)&&(libtess.mesh.meshSplice(t,o.oPrev()),t=libtess.sweep.finishLeftRegions_(e,r,null),a=!0),a)?libtess.sweep.addRightEdges_(e,s,t.oNext,l,l,!0):(i=libtess.geom.vertLeq(o.org,n.org)?o.oPrev():n,i=libtess.mesh.connect(t.lPrev(),i),libtess.sweep.addRightEdges_(e,s,i,i.oNext,i.oNext,!1),i.sym.activeRegion.fixUpperEdge=!0,libtess.sweep.walkDirtyRegions_(e,s))},libtess.sweep.connectLeftDegenerate_=function(e,s,t){var i=s.eUp;if(libtess.geom.vertEq(i.org,t))libtess.sweep.TOLERANCE_NONZERO_&&libtess.sweep.spliceMergeVertices_(e,i,t.anEdge);else{if(!libtess.geom.vertEq(i.dst(),t))return libtess.mesh.splitEdge(i.sym),s.fixUpperEdge&&(libtess.mesh.deleteEdge(i.oNext),s.fixUpperEdge=!1),libtess.mesh.meshSplice(t.anEdge,i),void libtess.sweep.sweepEvent_(e,t);if(libtess.sweep.TOLERANCE_NONZERO_){var l=(s=libtess.sweep.topRightRegion_(s)).regionBelow(),r=l.eUp.sym,n=r.oNext,o=n;l.fixUpperEdge&&(libtess.sweep.deleteRegion_(e,l),libtess.mesh.deleteEdge(r),r=n.oPrev()),libtess.mesh.meshSplice(t.anEdge,r),libtess.geom.edgeGoesLeft(n)||(n=null),libtess.sweep.addRightEdges_(e,s,r.oNext,o,n,!0)}}},libtess.sweep.connectLeftVertex_=function(e,s){var t=new libtess.ActiveRegion;t.eUp=s.anEdge.sym;var i=e.dict.search(t).getKey(),l=i.regionBelow(),r=i.eUp,n=l.eUp;if(0!==libtess.geom.edgeSign(r.dst(),s,r.org)){var o,a=libtess.geom.vertLeq(n.dst(),r.dst())?i:l;if(i.inside||a.fixUpperEdge){if(a===i)o=libtess.mesh.connect(s.anEdge.sym,r.lNext);else o=libtess.mesh.connect(n.dNext(),s.anEdge).sym;a.fixUpperEdge?libtess.sweep.fixUpperEdge_(a,o):libtess.sweep.computeWinding_(e,libtess.sweep.addRegionBelow_(e,i,o)),libtess.sweep.sweepEvent_(e,s)}else libtess.sweep.addRightEdges_(e,i,s.anEdge,s.anEdge,null,!0)}else libtess.sweep.connectLeftDegenerate_(e,i,s)},libtess.sweep.sweepEvent_=function(e,s){e.event=s;for(var t=s.anEdge;null===t.activeRegion;)if((t=t.oNext)===s.anEdge)return void libtess.sweep.connectLeftVertex_(e,s);var i=libtess.sweep.topLeftRegion_(t.activeRegion),l=i.regionBelow(),r=l.eUp,n=libtess.sweep.finishLeftRegions_(e,l,null);n.oNext===r?libtess.sweep.connectRightVertex_(e,i,n):libtess.sweep.addRightEdges_(e,i,n.oNext,r,r,!0)},libtess.sweep.addSentinel_=function(e,s){var t=new libtess.ActiveRegion,i=libtess.mesh.makeEdge(e.mesh);i.org.s=libtess.sweep.SENTINEL_COORD_,i.org.t=s,i.dst().s=-libtess.sweep.SENTINEL_COORD_,i.dst().t=s,e.event=i.dst(),t.eUp=i,t.windingNumber=0,t.inside=!1,t.fixUpperEdge=!1,t.sentinel=!0,t.dirty=!1,t.nodeUp=e.dict.insert(t)},libtess.sweep.initEdgeDict_=function(e){e.dict=new libtess.Dict(e,libtess.sweep.edgeLeq_),libtess.sweep.addSentinel_(e,-libtess.sweep.SENTINEL_COORD_),libtess.sweep.addSentinel_(e,libtess.sweep.SENTINEL_COORD_)},libtess.sweep.doneEdgeDict_=function(e){for(var s;null!==(s=e.dict.getMin().getKey());)s.sentinel,libtess.sweep.deleteRegion_(e,s);e.dict=null},libtess.sweep.removeDegenerateEdges_=function(e){for(var s,t=e.mesh.eHead,i=t.next;i!==t;i=s){s=i.next;var l=i.lNext;libtess.geom.vertEq(i.org,i.dst())&&i.lNext.lNext!==i&&(libtess.sweep.spliceMergeVertices_(e,l,i),libtess.mesh.deleteEdge(i),l=(i=l).lNext),l.lNext===i&&(l!==i&&(l!==s&&l!==s.sym||(s=s.next),libtess.mesh.deleteEdge(l)),i!==s&&i!==s.sym||(s=s.next),libtess.mesh.deleteEdge(i))}},libtess.sweep.initPriorityQ_=function(e){var s=new libtess.PriorityQ;e.pq=s;var t,i=e.mesh.vHead;for(t=i.next;t!==i;t=t.next)t.pqHandle=s.insert(t);s.init()},libtess.sweep.donePriorityQ_=function(e){e.pq.deleteQ(),e.pq=null},libtess.sweep.removeDegenerateFaces_=function(e){for(var s,t=e.fHead.next;t!==e.fHead;t=s){s=t.next;var i=t.anEdge;i.lNext.lNext===i&&(libtess.sweep.addWinding_(i.oNext,i),libtess.mesh.deleteEdge(i))}},libtess.tessmono={},libtess.tessmono.tessellateMonoRegion_=function(e){for(var s=e.anEdge;libtess.geom.vertLeq(s.dst(),s.org);s=s.lPrev());for(;libtess.geom.vertLeq(s.org,s.dst());s=s.lNext);for(var t,i=s.lPrev();s.lNext!==i;)if(libtess.geom.vertLeq(s.dst(),i.org)){for(;i.lNext!==s&&(libtess.geom.edgeGoesLeft(i.lNext)||libtess.geom.edgeSign(i.org,i.dst(),i.lNext.dst())<=0);)i=(t=libtess.mesh.connect(i.lNext,i)).sym;i=i.lPrev()}else{for(;i.lNext!==s&&(libtess.geom.edgeGoesRight(s.lPrev())||libtess.geom.edgeSign(s.dst(),s.org,s.lPrev().org)>=0);)t=libtess.mesh.connect(s,s.lPrev()),s=t.sym;s=s.lNext}for(;i.lNext.lNext!==s;)i=(t=libtess.mesh.connect(i.lNext,i)).sym},libtess.tessmono.tessellateInterior=function(e){for(var s,t=e.fHead.next;t!==e.fHead;t=s)s=t.next,t.inside&&libtess.tessmono.tessellateMonoRegion_(t)},libtess.tessmono.discardExterior=function(e){for(var s,t=e.fHead.next;t!==e.fHead;t=s)s=t.next,t.inside||libtess.mesh.zapFace(t)},libtess.tessmono.setWindingNumber=function(e,s,t){for(var i,l=e.eHead.next;l!==e.eHead;l=i)i=l.next,l.rFace().inside!==l.lFace.inside?l.winding=l.lFace.inside?s:-s:t?libtess.mesh.deleteEdge(l):l.winding=0},libtess.Dict=function(e,s){this.head_=new libtess.DictNode,this.frame_=e,this.leq_=s},libtess.Dict.prototype.deleteDict_=function(){},libtess.Dict.prototype.insertBefore=function(e,s){do{e=e.prev}while(null!==e.key&&!this.leq_(this.frame_,e.key,s));var t=new libtess.DictNode(s,e.next,e);return e.next.prev=t,e.next=t,t},libtess.Dict.prototype.insert=function(e){return this.insertBefore(this.head_,e)},libtess.Dict.prototype.deleteNode=function(e){e.next.prev=e.prev,e.prev.next=e.next},libtess.Dict.prototype.search=function(e){var s=this.head_;do{s=s.next}while(null!==s.key&&!this.leq_(this.frame_,e,s.key));return s},libtess.Dict.prototype.getMin=function(){return this.head_.next},libtess.Dict.prototype.getMax=function(){return this.head_.prev},libtess.DictNode=function(e,s,t){this.key=e||null,this.next=s||this,this.prev=t||this},libtess.DictNode.prototype.getKey=function(){return this.key},libtess.DictNode.prototype.getSuccessor=function(){return this.next},libtess.DictNode.prototype.getPredecessor=function(){return this.prev},libtess.GluTesselator=function(){this.state_=libtess.GluTesselator.tessState_.T_DORMANT,this.lastEdge_=null,this.mesh=null,this.errorCallback_=null,this.normal_=[0,0,0],this.windingRule=libtess.windingRule.GLU_TESS_WINDING_ODD,this.fatalError=!1,this.dict=null,this.pq=null,this.event=null,this.combineCallback_=null,this.boundaryOnly_=!1,this.beginCallback_=null,this.edgeFlagCallback_=null,this.vertexCallback_=null,this.endCallback_=null,this.meshCallback_=null,this.polygonData_=null},libtess.GluTesselator.tessState_={T_DORMANT:0,T_IN_POLYGON:1,T_IN_CONTOUR:2},libtess.GluTesselator.prototype.gluDeleteTess=function(){this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT)},libtess.GluTesselator.prototype.gluTessProperty=function(e,s){switch(e){case libtess.gluEnum.GLU_TESS_TOLERANCE:return;case libtess.gluEnum.GLU_TESS_WINDING_RULE:var t=s;switch(t){case libtess.windingRule.GLU_TESS_WINDING_ODD:case libtess.windingRule.GLU_TESS_WINDING_NONZERO:case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:return void(this.windingRule=t)}break;case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:return void(this.boundaryOnly_=!!s);default:return void this.callErrorCallback(libtess.gluEnum.GLU_INVALID_ENUM)}this.callErrorCallback(libtess.gluEnum.GLU_INVALID_VALUE)},libtess.GluTesselator.prototype.gluGetTessProperty=function(e){switch(e){case libtess.gluEnum.GLU_TESS_TOLERANCE:return 0;case libtess.gluEnum.GLU_TESS_WINDING_RULE:return this.windingRule;case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:return this.boundaryOnly_;default:this.callErrorCallback(libtess.gluEnum.GLU_INVALID_ENUM)}return!1},libtess.GluTesselator.prototype.gluTessNormal=function(e,s,t){this.normal_[0]=e,this.normal_[1]=s,this.normal_[2]=t},libtess.GluTesselator.prototype.gluTessCallback=function(e,s){var t=s||null;switch(e){case libtess.gluEnum.GLU_TESS_BEGIN:case libtess.gluEnum.GLU_TESS_BEGIN_DATA:return void(this.beginCallback_=t);case libtess.gluEnum.GLU_TESS_EDGE_FLAG:case libtess.gluEnum.GLU_TESS_EDGE_FLAG_DATA:return void(this.edgeFlagCallback_=t);case libtess.gluEnum.GLU_TESS_VERTEX:case libtess.gluEnum.GLU_TESS_VERTEX_DATA:return void(this.vertexCallback_=t);case libtess.gluEnum.GLU_TESS_END:case libtess.gluEnum.GLU_TESS_END_DATA:return void(this.endCallback_=t);case libtess.gluEnum.GLU_TESS_ERROR:case libtess.gluEnum.GLU_TESS_ERROR_DATA:return void(this.errorCallback_=t);case libtess.gluEnum.GLU_TESS_COMBINE:case libtess.gluEnum.GLU_TESS_COMBINE_DATA:return void(this.combineCallback_=t);case libtess.gluEnum.GLU_TESS_MESH:return void(this.meshCallback_=t);default:return void this.callErrorCallback(libtess.gluEnum.GLU_INVALID_ENUM)}},libtess.GluTesselator.prototype.gluTessVertex=function(e,s){var t=!1,i=[0,0,0];this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);for(var l=0;l<3;++l){var r=e[l];r<-libtess.GLU_TESS_MAX_COORD&&(r=-libtess.GLU_TESS_MAX_COORD,t=!0),r>libtess.GLU_TESS_MAX_COORD&&(r=libtess.GLU_TESS_MAX_COORD,t=!0),i[l]=r}t&&this.callErrorCallback(libtess.errorType.GLU_TESS_COORD_TOO_LARGE),this.addVertex_(i,s)},libtess.GluTesselator.prototype.gluTessBeginPolygon=function(e){this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT),this.state_=libtess.GluTesselator.tessState_.T_IN_POLYGON,this.mesh=new libtess.GluMesh,this.polygonData_=e},libtess.GluTesselator.prototype.gluTessBeginContour=function(){this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON),this.state_=libtess.GluTesselator.tessState_.T_IN_CONTOUR,this.lastEdge_=null},libtess.GluTesselator.prototype.gluTessEndContour=function(){this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR),this.state_=libtess.GluTesselator.tessState_.T_IN_POLYGON},libtess.GluTesselator.prototype.gluTessEndPolygon=function(){if(this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON),this.state_=libtess.GluTesselator.tessState_.T_DORMANT,libtess.normal.projectPolygon(this,this.normal_[0],this.normal_[1],this.normal_[2]),libtess.sweep.computeInterior(this),!this.fatalError){var e=this.mesh;if(this.boundaryOnly_?libtess.tessmono.setWindingNumber(e,1,!0):libtess.tessmono.tessellateInterior(e),this.mesh.checkMesh(),this.beginCallback_||this.endCallback_||this.vertexCallback_||this.edgeFlagCallback_)if(this.boundaryOnly_)libtess.render.renderBoundary(this,this.mesh);else{var s=!!this.edgeFlagCallback_;libtess.render.renderMesh(this,this.mesh,s)}if(this.meshCallback_)return libtess.tessmono.discardExterior(this.mesh),this.meshCallback_(this.mesh),this.mesh=null,void(this.polygonData_=null)}libtess.mesh.deleteMesh(this.mesh),this.polygonData_=null,this.mesh=null},libtess.GluTesselator.prototype.requireState_=function(e){this.state_!==e&&this.gotoState_(e)},libtess.GluTesselator.prototype.gotoState_=function(e){for(;this.state_!==e;)if(this.state_<e)switch(this.state_){case libtess.GluTesselator.tessState_.T_DORMANT:this.callErrorCallback(libtess.errorType.GLU_TESS_MISSING_BEGIN_POLYGON),this.gluTessBeginPolygon(null);break;case libtess.GluTesselator.tessState_.T_IN_POLYGON:this.callErrorCallback(libtess.errorType.GLU_TESS_MISSING_BEGIN_CONTOUR),this.gluTessBeginContour()}else switch(this.state_){case libtess.GluTesselator.tessState_.T_IN_CONTOUR:this.callErrorCallback(libtess.errorType.GLU_TESS_MISSING_END_CONTOUR),this.gluTessEndContour();break;case libtess.GluTesselator.tessState_.T_IN_POLYGON:this.callErrorCallback(libtess.errorType.GLU_TESS_MISSING_END_POLYGON),this.gluTessEndPolygon()}},libtess.GluTesselator.prototype.addVertex_=function(e,s){var t=this.lastEdge_;null===t?(t=libtess.mesh.makeEdge(this.mesh),libtess.mesh.meshSplice(t,t.sym)):(libtess.mesh.splitEdge(t),t=t.lNext),t.org.data=s,t.org.coords[0]=e[0],t.org.coords[1]=e[1],t.org.coords[2]=e[2],t.winding=1,t.sym.winding=-1,this.lastEdge_=t},libtess.GluTesselator.prototype.callBeginCallback=function(e){this.beginCallback_&&this.beginCallback_(e,this.polygonData_)},libtess.GluTesselator.prototype.callVertexCallback=function(e){this.vertexCallback_&&this.vertexCallback_(e,this.polygonData_)},libtess.GluTesselator.prototype.callEdgeFlagCallback=function(e){this.edgeFlagCallback_&&this.edgeFlagCallback_(e,this.polygonData_)},libtess.GluTesselator.prototype.callEndCallback=function(){this.endCallback_&&this.endCallback_(this.polygonData_)},libtess.GluTesselator.prototype.callCombineCallback=function(e,s,t){return this.combineCallback_&&this.combineCallback_(e,s,t,this.polygonData_)||null},libtess.GluTesselator.prototype.callErrorCallback=function(e){this.errorCallback_&&this.errorCallback_(e,this.polygonData_)},libtess.GluFace=function(e,s){this.next=e||this,this.prev=s||this,this.anEdge=null,this.data=null,this.inside=!1},libtess.GluHalfEdge=function(e){this.next=e||this,this.sym=null,this.oNext=null,this.lNext=null,this.org=null,this.lFace=null,this.activeRegion=null,this.winding=0},libtess.GluHalfEdge.prototype.rFace=function(){return this.sym.lFace},libtess.GluHalfEdge.prototype.dst=function(){return this.sym.org},libtess.GluHalfEdge.prototype.oPrev=function(){return this.sym.lNext},libtess.GluHalfEdge.prototype.lPrev=function(){return this.oNext.sym},libtess.GluHalfEdge.prototype.dPrev=function(){return this.lNext.sym},libtess.GluHalfEdge.prototype.rPrev=function(){return this.sym.oNext},libtess.GluHalfEdge.prototype.dNext=function(){return this.rPrev().sym},libtess.GluHalfEdge.prototype.rNext=function(){return this.oPrev().sym},libtess.GluMesh=function(){this.vHead=new libtess.GluVertex,this.fHead=new libtess.GluFace,this.eHead=new libtess.GluHalfEdge,this.eHeadSym=new libtess.GluHalfEdge,this.eHead.sym=this.eHeadSym,this.eHeadSym.sym=this.eHead},libtess.GluMesh.prototype.checkMesh=function(){if(libtess.DEBUG){var e,s,t,i=this.fHead,l=this.vHead,r=this.eHead,n=i;for(n=i;(s=n.next)!==i;n=s){e=s.anEdge;do{e=e.lNext}while(e!==s.anEdge)}var o=l;for(o=l;(t=o.next)!==l;o=t){e=t.anEdge;do{e=e.oNext}while(e!==t.anEdge)}var a=r;for(a=r;(e=a.next)!==r;a=e);}},libtess.GluVertex=function(e,s){this.next=e||this,this.prev=s||this,this.anEdge=null,this.data=null,this.coords=[0,0,0],this.s=0,this.t=0,this.pqHandle=0},libtess.PriorityQ=function(){this.verts_=[],this.order_=null,this.size_=0,this.initialized_=!1,this.heap_=new libtess.PriorityQHeap},libtess.PriorityQ.prototype.deleteQ=function(){this.heap_=null,this.order_=null,this.verts_=null},libtess.PriorityQ.prototype.init=function(){this.order_=[];for(var e=0;e<this.size_;e++)this.order_[e]=e;var s,t=(s=this.verts_,function(e,t){return libtess.geom.vertLeq(s[e],s[t])?1:-1});if(this.order_.sort(t),this.initialized_=!0,this.heap_.init(),libtess.DEBUG){var i=0+this.size_-1;for(e=0;e<i;++e);}},libtess.PriorityQ.prototype.insert=function(e){if(this.initialized_)return this.heap_.insert(e);var s=this.size_++;return this.verts_[s]=e,-(s+1)},libtess.PriorityQ.prototype.extractMin=function(){if(0===this.size_)return this.heap_.extractMin();var e=this.verts_[this.order_[this.size_-1]];if(!this.heap_.isEmpty()){var s=this.heap_.minimum();if(libtess.geom.vertLeq(s,e))return this.heap_.extractMin()}do{--this.size_}while(this.size_>0&&null===this.verts_[this.order_[this.size_-1]]);return e},libtess.PriorityQ.prototype.minimum=function(){if(0===this.size_)return this.heap_.minimum();var e=this.verts_[this.order_[this.size_-1]];if(!this.heap_.isEmpty()){var s=this.heap_.minimum();if(libtess.geom.vertLeq(s,e))return s}return e},libtess.PriorityQ.prototype.remove=function(e){if(e>=0)this.heap_.remove(e);else for(e=-(e+1),this.verts_[e]=null;this.size_>0&&null===this.verts_[this.order_[this.size_-1]];)--this.size_},libtess.PriorityQHeap=function(){this.heap_=libtess.PriorityQHeap.reallocNumeric_([0],libtess.PriorityQHeap.INIT_SIZE_+1),this.verts_=[null,null],this.handles_=[0,0],this.size_=0,this.max_=libtess.PriorityQHeap.INIT_SIZE_,this.freeList_=0,this.initialized_=!1,this.heap_[1]=1},libtess.PriorityQHeap.INIT_SIZE_=32,libtess.PriorityQHeap.reallocNumeric_=function(e,s){for(var t=new Array(s),i=0;i<e.length;i++)t[i]=e[i];for(;i<s;i++)t[i]=0;return t},libtess.PriorityQHeap.prototype.init=function(){for(var e=this.size_;e>=1;--e)this.floatDown_(e);this.initialized_=!0},libtess.PriorityQHeap.prototype.insert=function(e){var s,t=++this.size_;return 2*t>this.max_&&(this.max_*=2,this.handles_=libtess.PriorityQHeap.reallocNumeric_(this.handles_,this.max_+1)),0===this.freeList_?s=t:(s=this.freeList_,this.freeList_=this.handles_[this.freeList_]),this.verts_[s]=e,this.handles_[s]=t,this.heap_[t]=s,this.initialized_&&this.floatUp_(t),s},libtess.PriorityQHeap.prototype.isEmpty=function(){return 0===this.size_},libtess.PriorityQHeap.prototype.minimum=function(){return this.verts_[this.heap_[1]]},libtess.PriorityQHeap.prototype.extractMin=function(){var e=this.heap_,s=this.verts_,t=this.handles_,i=e[1],l=s[i];return this.size_>0&&(e[1]=e[this.size_],t[e[1]]=1,s[i]=null,t[i]=this.freeList_,this.freeList_=i,--this.size_>0&&this.floatDown_(1)),l},libtess.PriorityQHeap.prototype.remove=function(e){var s=this.heap_,t=this.verts_,i=this.handles_,l=i[e];if(s[l]=s[this.size_],i[s[l]]=l,l<=--this.size_)if(l<=1)this.floatDown_(l);else{var r=t[s[l]],n=t[s[l>>1]];libtess.geom.vertLeq(n,r)?this.floatDown_(l):this.floatUp_(l)}t[e]=null,i[e]=this.freeList_,this.freeList_=e},libtess.PriorityQHeap.prototype.floatDown_=function(e){for(var s=this.heap_,t=this.verts_,i=this.handles_,l=e,r=s[l];;){var n=l<<1;n<this.size_&&libtess.geom.vertLeq(t[s[n+1]],t[s[n]])&&(n+=1);var o=s[n];if(n>this.size_||libtess.geom.vertLeq(t[r],t[o]))return s[l]=r,void(i[r]=l);s[l]=o,i[o]=l,l=n}},libtess.PriorityQHeap.prototype.floatUp_=function(e){for(var s=this.heap_,t=this.verts_,i=this.handles_,l=e,r=s[l];;){var n=l>>1,o=s[n];if(0===n||libtess.geom.vertLeq(t[o],t[r]))return s[l]=r,void(i[r]=l);s[l]=o,i[o]=l,l=n}},libtess.ActiveRegion=function(){this.eUp=null,this.nodeUp=null,this.windingNumber=0,this.inside=!1,this.sentinel=!1,this.dirty=!1,this.fixUpperEdge=!1},libtess.ActiveRegion.prototype.regionBelow=function(){return this.nodeUp.getPredecessor().getKey()},libtess.ActiveRegion.prototype.regionAbove=function(){return this.nodeUp.getSuccessor().getKey()},"undefined"!=typeof module&&(module.exports=libtess);